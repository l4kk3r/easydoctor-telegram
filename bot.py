import telebot
from telebot import types
import requests

bot = telebot.TeleBot('1625581742:AAE3xsoGvlQ7xtKNqZF3hWQnLOO1_dxVTk0')

status = {}
nicks = {}
doctors = {}
times = {}

markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
itembtn1 = types.KeyboardButton('–ù–∏–∫–∏—Ñ–æ—Ä–æ–≤–∞ –ï–ª–∏–∑–∞–≤–µ—Ç–∞ –Æ—Ä—å–µ–≤–Ω–∞')
itembtn2 = types.KeyboardButton('–ê–Ω–æ—Ç—å–µ–≤–∞ –ò—Ä–∏–Ω–∞ –ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞')
markup.add(itembtn1, itembtn2)

markupt = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
markupt.add(types.KeyboardButton('18:00'), types.KeyboardButton('19:00'), types.KeyboardButton('20:00'), types.KeyboardButton('21:00'), types.KeyboardButton("22:00"))

markupb = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
markupb.add(types.KeyboardButton("/reg"))

def send_request(user_id):
    global nicks, doctors, times
    r = requests.post('https://easydoctorr.herokuapp.com/telegramrecord/', data={'username': nicks[user_id], 'doctor': doctors[user_id], 'time': times[user_id]})
    return r.content

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, 'üëã–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç EasyDoctor.\n–° –ø–æ–º–æ—â—å—é –º–µ–Ω—è —Ç—ã —Å–º–æ–∂–µ—à—å –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –ª—é–±–æ–º—É –≤—Ä–∞—á—É!\n\n–ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –¥–æ–∫—Ç–æ—Ä—É –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /reg')
    status[message.chat.id] = 'main'

@bot.message_handler(commands=['reg'])
def start_message(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏—à–ª–∏—Ç–µ —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ')
    status[message.chat.id] = 'name_waiting'

@bot.message_handler(content_types=['text'])
def send_text(message):
    if message.chat.id not in status:
        status[message.chat.id] = 'main'
    
    if status[message.chat.id] == 'name_waiting':
        nicks[message.chat.id] = message.text
        bot.send_message(message.chat.id, '–ö –∫–∞–∫–æ–º—É –¥–æ–∫—Ç–æ—Ä—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?', reply_markup=markup)
        status[message.chat.id] = 'doctor_waiting'
    elif status[message.chat.id] == 'doctor_waiting':
        if message.text not in ['–ê–Ω–æ—Ç—å–µ–≤–∞ –ò—Ä–∏–Ω–∞ –ú–∏—Ö–∞–π–ª–æ–≤–Ω–∞', '–ù–∏–∫–∏—Ñ–æ—Ä–æ–≤–∞ –ï–ª–∏–∑–∞–≤–µ—Ç–∞ –Æ—Ä—å–µ–≤–Ω–∞']:
            bot.send_message(message.chat.id, '–î–∞–Ω–Ω–æ–≥–æ –¥–æ–∫—Ç–æ—Ä–∞ –Ω–µ—Ç –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ')
            return 1
        doctors[message.chat.id] = message.text
        bot.send_message(message.chat.id, '–ü—Ä–∏—à–ª–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è', reply_markup=markupt)
        status[message.chat.id] = 'time_waiting'
    elif status[message.chat.id] == 'time_waiting':
        times[message.chat.id] = message.text
        s = send_request(message.chat.id)
        bot.send_message(message.chat.id, str(s), reply_markup=markupb)
        if s:
            bot.send_message(message.chat.id, 'üìù–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∞–Ω–∞.', reply_markup=markupb)
        else:
            bot.send_message(message.chat.id, '‚ùå–û—Ç–º–µ–Ω–∞! –ó–∞–ø–∏—Å—å –∫ –¥–∞–Ω–Ω–æ–º—É –¥–æ–∫—Ç–æ—Ä—É –Ω–∞ –¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!', reply_markup=markupb)
        status[message.chat.id] = 'main'
    else:
        bot.send_message(message.chat.id, 'üí°–ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –¥–æ–∫—Ç–æ—Ä—É –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /reg')

bot.polling()
